# PostgreSQL
postgres:
  image: postgres:latest
  volumes:
      - ./postgresql/data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
  environment:
    - POSTGRES_PASSWORD={{cookiecutter.postgres_password}}
    - POSTGRES_USER={{cookiecutter.repo_name}}_user
    - POSTGRES_DB={{cookiecutter.repo_name}}
  ports:
    - "5432:5432"

# Redis
redis:
  image: redis
  volumes:
      - ./redis/data:/data

# Nginx
nginx:
  image: nginx
  volumes:
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    - ./virtualenv/{{cookiecutter.repo_name}}env/media:/media:ro
    - ./virtualenv/{{cookiecutter.repo_name}}env/static:/static:ro
  links:
    - web
  environment:
    VIRTUAL_HOST: {{cookiecutter.virtual_host}}

# pgweb
pgweb:
  image: donnex/pgweb
  links:
    - postgres
  environment:
    VIRTUAL_HOST: pgweb.{{cookiecutter.virtual_host}}

# Assets
assets:
  image: donnex/assets
  ports:
    - "35729:35729"
  volumes:
    - ./assets/gulpfile.js:/gulp/gulpfile.js:ro
    - ./virtualenv/{{cookiecutter.repo_name}}/sass:/gulp/sass
    - ./virtualenv/{{cookiecutter.repo_name}}/static/css:/gulp/css
    - ./virtualenv/{{cookiecutter.repo_name}}/static/js:/gulp/js

# Web python
web:
  build: ./web
  user: {{cookiecutter.repo_name}}_user
  volumes:
    - ./virtualenv/{{cookiecutter.repo_name}}env:/virtualenv/{{cookiecutter.repo_name}}env
#  links:
#    - postgres
#    - redis
  environment:
    - DJANGO_CONFIGURATION=Dev
    - DJANGO_SECRET_KEY={{cookiecutter.django_secret_key}}
    - DJANGO_HIREDIS_CACHE_LOCATION=redis:6379
    - DJANGO_ALLOWED_HOSTS=""
    - DATABASE_URL=postgres://{{cookiecutter.repo_name}}_user:{{cookiecutter.postgres_password}}@postgres/{{cookiecutter.repo_name}}?sslmode=disable
    - EMAIL_URL=console://
  user: root
  command: activate.sh gunicorn --log-level info --log-file=- --workers 4 --name {{cookiecutter.repo_name}}_gunicorn -b 0.0.0.0:8000 --reload {{cookiecutter.repo_name}}site.{{cookiecutter.repo_name}}site.wsgi:application
